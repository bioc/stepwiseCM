\name{Step.pred}
\alias{Step.pred}
\title{
A function to calculate the RS for the test set and decide which samples should be classified with molecular data.
}

\description{
This function needs the output from the "Curve.generator" and the percentage of samples allows to classify with molecular data. Based on the specified percentage, it finds the RS threshold. Compare a test sample's RS with this threshold, decide whether a test samples should be classified with molecular data or not.   
}

\usage{
Step.pred(curve, test.cli, percent)
}

\arguments{
  \item{curve}{
A list obejct generated by the "Curve.generator" function.
}
  \item{test.cli}{
A data frame or matrix containing the clinical variables of the test set, where columns correspond to samples and rows to features.
}
  \item{percent}{
percentage of samples allow to classify with molecular data
}
}

\value{
  \item{Pred}{predicted class labels of the test set}
  \item{RS}{If the "type" set to "rank" ("proximity") was used in generating the "curve" object, then RS will be a vector of RS calculated from the ranking (proximity) approach , otherwise RS will be a matrix of RS, with two columns and size of rows equal number of test samples, calculated using the both approaches.}
  \item{Threshold}{a RS which corresponding to the specified re-classification percentage.}
  \item{Pass}{a vector of binary values. 1 means samples's RS higher than the threshold, so classify it with molecular data is more beneficial and vice versa.}

}

\author{
Askar Obulkasim
    
Maintainer: Askar Obulkasim <askar.wubulikasimu@vumc.nl>
}



\examples{
data(CNS)
tr.cli <- t(CNS$cli[1:40, ])
te.cli <- t(CNS$cli[41:60, ])
tr.gen <- CNS$mrna[, 1:40]
te.gen <- CNS$mrna[, 41:60]
tr.label <- CNS$class[1:40]
te.label <- CNS$class[41:60]
curve <- Curve.generator(train.cli=tr.cli, train.gen=tr.gen, train.label=tr.label, test.cli=te.cli, 
                         test.gen=te.gen, test.label=te.label, type = c("RF", "GLM_L1"), 
                         RStype = "rank", Parallel = FALSE, CVtype = "k-fold", outerkfold = 2, 
                         innerkfold = 2, N = 2, plot.it = FALSE)
A <- Step.pred(curve, te.cli, 30)

}

